"use strict";(self.webpackChunkmybooks=self.webpackChunkmybooks||[]).push([[3299],{8766:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(4848),a=r(8453);const i={},o=void 0,s={id:"Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter",title:"a-tree-walk-interpreter",description:"With this part, we begin jlox, the first of our two interpreters. Programming",source:"@site/docs/Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter.md",sourceDirName:"Craftinginterpreters/not-translated-yet",slug:"/Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter",permalink:"/docs/Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter",draft:!1,unlisted:!1,editUrl:"https://github.com/jabberwocky238/jabberwocky238.github.io/docs/Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"a-bytecode-virtual-machine",permalink:"/docs/Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine"},next:{title:"a-virtual-machine",permalink:"/docs/Craftinginterpreters/not-translated-yet/a-virtual-machine"}},l={},c=[];function p(e){const t={a:"a",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"With this part, we begin jlox, the first of our two interpreters. Programming\r\nlanguages are a huge topic with piles of concepts and terminology to cram into\r\nyour brain all at once. Programming language theory requires a level of mental\r\nrigor that you probably haven't had to summon since your last calculus final.\r\n(Fortunately there isn't too much theory in this book.)"}),"\n",(0,n.jsx)(t.p,{children:"Implementing an interpreter uses a few architectural tricks and design\r\npatterns uncommon in other kinds of applications, so we'll be getting used to\r\nthe engineering side of things too. Given all of that, we'll keep the code we\r\nhave to write as simple and plain as possible."}),"\n",(0,n.jsxs)(t.p,{children:["In less than two thousand lines of clean Java code, we'll build a complete\r\ninterpreter for Lox that implements every single feature of the language,\r\nexactly as we've specified. The first few chapters work front-to-back through\r\nthe phases of the interpreter -- ",(0,n.jsx)(t.a,{href:"scanning.html",children:"scanning"}),", ",(0,n.jsx)(t.a,{href:"parsing-expressions.html",children:"parsing"}),", and\r\n",(0,n.jsx)(t.a,{href:"evaluating-expressions.html",children:"evaluating code"}),". After that, we add language features one at a time,\r\ngrowing a simple calculator into a full-fledged scripting language."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var n=r(6540);const a={},i=n.createContext(a);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);