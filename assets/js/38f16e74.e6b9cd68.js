"use strict";(self.webpackChunkjabberwocky238_github_io=self.webpackChunkjabberwocky238_github_io||[]).push([[5199],{7295:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var t=r(4848),s=r(8453);const o={title:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027",authors:["jabberwocky238"],tags:["zh","tech","rust"],date:"2024-10-07T01:45",description:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027"},l=void 0,a={permalink:"/blog/2024/10/07/Recursive-and-Loop-rust",source:"@site/blog/2024-10-07-Recursive-and-Loop-rust.md",title:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027",description:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027",date:"2024-10-07T01:45:00.000Z",tags:[{inline:!1,label:"zh",permalink:"/blog/tags/zh",description:"Blogs Written In Chinese"},{inline:!1,label:"tech",permalink:"/blog/tags/tech",description:"All technical blogs"},{inline:!1,label:"rust",permalink:"/blog/tags/rust",description:"Rust programming language"}],hasTruncateMarker:!0,authors:[{name:"jabberwocky238",title:"WTF",url:"https://github.com/jabberwocky238",page:null,socials:{github:"https://github.com/jabberwocky238"},imageURL:"/jw238_avatar.png",key:"jabberwocky238"}],frontMatter:{title:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027",authors:["jabberwocky238"],tags:["zh","tech","rust"],date:"2024-10-07T01:45",description:"rust\u4e2d\u53d8\u6362\u9012\u5f52\u4e3a\u5faa\u73af\u7684\u5fc5\u8981\u6027"},unlisted:!1,lastUpdatedAt:1730467125e3,lastUpdatedBy:"jabberwocky238",prevItem:{title:"\u81ea\u5efaVPN+DNS\u5b9e\u73b0\u5185\u7f51\u7a7f\u900f\u548c\u7ec4\u7f51",permalink:"/blog/2024/10/27/setting-your-own-vpn"},nextItem:{title:"Animate girls, ShinyColors.",permalink:"/blog/2024/10/06/ShinyColor-1"}},c={authorsImageUrls:[void 0]},i=[{value:"\u9012\u5f52\u4f1a\u6709\u6240\u6709\u6743\u95ee\u9898",id:"\u9012\u5f52\u4f1a\u6709\u6240\u6709\u6743\u95ee\u9898",level:2},{value:"\u5faa\u73af\u53ef\u4ee5\u907f\u514d\u6240\u6709\u6743\u95ee\u9898",id:"\u5faa\u73af\u53ef\u4ee5\u907f\u514d\u6240\u6709\u6743\u95ee\u9898",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"\u867d\u7136\u73b0\u5728\u5df2\u7ecf\u51cc\u6668\u4e00\u70b945\u5206\u4f46\u662f\u8fd9\u4e2a\u6280\u672f\u70b9\u592a\u725b\u903c\u4e86\u4ee5\u81f3\u4e8e\u6211\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u8981\u8bb0\u5f55\u4e0b\u6765\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u9012\u5f52\u4f1a\u6709\u6240\u6709\u6743\u95ee\u9898",children:"\u9012\u5f52\u4f1a\u6709\u6240\u6709\u6743\u95ee\u9898"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'pub struct JManager<H, N> {\r\n    nodes: HashMap<H, N>,\r\n    /// hash, children\'s hash\r\n    chash: HashMap<H, HashSet<H>>,      \r\n}\r\n// \u51fd\u6570\u7684\u4f5c\u7528\u662f\u67e5\u51fa\u6240\u6709\u5b50\u8282\u70b9\u5e76\u5220\u9664\r\n// \u4f46\u662f\u9012\u5f52\u4f1a\u5bfc\u81f4\u6240\u6709\u6743\u95ee\u9898\uff0c\u4ee5\u81f3\u4e8edelete_node\u65e0\u6cd5\u9012\u5f52\u8c03\u7528\r\nimpl JManager<u64, u64> {\r\n    fn delete_node(&mut self, node: &u64) -> Result<(), Box<dyn std::error::Error>> {\r\n        let chs = self.chash.get(ph).unwrap(); // borrow immutable self\r\n        if !self.nodes.contains_key(&node) { // borrow immutable self\r\n            for ch in chs.iter() {\r\n                self.delete_node(ch); // borrow mutable self, panic!\r\n            }\r\n            Ok(())\r\n        } else {\r\n            Err("Node not exist".into())\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u5faa\u73af\u53ef\u4ee5\u907f\u514d\u6240\u6709\u6743\u95ee\u9898",children:"\u5faa\u73af\u53ef\u4ee5\u907f\u514d\u6240\u6709\u6743\u95ee\u9898"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'impl JManager<u64, u64> {\r\n    fn delete_node(&mut self, node: &u64) -> Result<(), Box<dyn std::error::Error>> {\r\n        if !self.nodes.contains_key(&node) {\r\n            return Err("Node not exist".into());\r\n        } \r\n        let mut to_delete = vec![node.clone()]; // queue\r\n\r\n        while let Some(h) = to_delete.pop() {\r\n            // parent remove child\r\n            if let Some(ph) = self.phash.get(&h) {\r\n                self.chash.get_mut(ph).unwrap().remove(&h);\r\n            }\r\n            // add children to queue\r\n            if let Some(chs) = self.chash.get(&h) {\r\n                // \u5c06\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f85\u5220\u9664\u5217\u8868\r\n                let chs = chs.iter().cloned().collect::<Vec<_>>();\r\n                to_delete.extend(chs);\r\n                // \u8fd9\u91cc\u662f\u5bf9chash\u7684\u53ef\u53d8\u5f15\u7528\uff0c\u800c\u4e0d\u662fself\uff0c\u6240\u4ee5\u4e0d\u4f1a\u62a5\u9519\r\n                // \u867d\u7136\u6211\u8001\u611f\u89c9chash\u7684\u5f15\u7528\u6709\u6240\u6709\u6743\u95ee\u9898\r\n                self.chash.remove(&h);\r\n            }\r\n\r\n            // **SAME EFFECT AS ABOVE**\r\n            // let chs = self.chash.get(&h).unwrap();\r\n            // let chs = chs.iter().cloned().collect::<Vec<_>>();\r\n            // to_delete.extend(chs);\r\n            // self.chash.remove(&h);\r\n\r\n            self.nodes.remove(&h);\r\n        }\r\n        Ok(())\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8fd9\u6bb5\u4ee3\u7801\u8ba9\u6211\u60f3\u5230\u4e86DFS\u9012\u5f52\u7248\u548c\u5faa\u73af\u7248\uff0c\u592a\u4f18\u7f8e\u4e86\u3002"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var t=r(6540);const s={},o=t.createContext(s);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);