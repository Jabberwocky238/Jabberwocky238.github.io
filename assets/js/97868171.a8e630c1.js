"use strict";(self.webpackChunkjabberwocky238_github_io=self.webpackChunkjabberwocky238_github_io||[]).push([[8192],{47581:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=i(74848),t=i(28453);const l={},a="units",d={id:"Arduino-R3",title:"units",description:"\u65cb\u94ae",source:"@site/docs/MCU/11-Arduino-R3.md",sourceDirName:".",slug:"/Arduino-R3",permalink:"/MCU/Arduino-R3",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Arduino",permalink:"/MCU/"},next:{title:"USB",permalink:"/MCU/ESP8266CH430C"}},s={},c=[{value:"\u65cb\u94ae",id:"\u65cb\u94ae",level:2},{value:"\u7535\u4f4d\u5668",id:"\u7535\u4f4d\u5668",level:2},{value:"\u8702\u9e23\u5668",id:"\u8702\u9e23\u5668",level:2},{value:"available",id:"available",level:2}];function o(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"units",children:"units"})}),"\n",(0,r.jsx)(e.h2,{id:"\u65cb\u94ae",children:"\u65cb\u94ae"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"alt text",src:i(91447).A+"",width:"754",height:"842"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"GND \u63a5\u5730"}),"\n",(0,r.jsx)(e.li,{children:"+5V \u7535\u6e90"}),"\n",(0,r.jsx)(e.li,{children:"VRx X\u8f74\u4fe1\u53f7\u8f93\u51fa"}),"\n",(0,r.jsx)(e.li,{children:"VRy Y\u8f74\u4fe1\u53f7\u8f93\u51fa"}),"\n",(0,r.jsx)(e.li,{children:"SW \u6309\u952e\u4fe1\u53f7\u8f93\u51fa"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"int ledPin = 13;  // LED connected to digital pin 13\r\nint inPin = 7;    // pushbutton connected to digital pin 7\r\nint val = 0;      // variable to store the read value\r\n\r\nvoid setup() {\r\n    pinMode(ledPin, OUTPUT);  // sets the digital pin 13 as output\r\n    pinMode(inPin, INPUT);    // sets the digital pin 7 as input\r\n}\r\n\r\nvoid loop() {\r\n    val = digitalRead(inPin);   // read the input pin\r\n    digitalWrite(ledPin, val);  // sets the LED to the button's value\r\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u7535\u4f4d\u5668",children:"\u7535\u4f4d\u5668"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"alt text",src:i(11105).A+"",width:"744",height:"518"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"CLK \u6570\u5b57\u4fe1\u53f7\u8f93\u51fa"}),"\n",(0,r.jsx)(e.li,{children:"DAT \u6570\u5b57\u4fe1\u53f7\u8f93\u51fa"}),"\n",(0,r.jsx)(e.li,{children:"SW \u672a\u77e5"}),"\n",(0,r.jsx)(e.li,{children:"+ \u7535\u6e90"}),"\n",(0,r.jsx)(e.li,{children:"GND \u63a5\u5730"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"int analogPin = A3; // potentiometer wiper (middle terminal) connected to analog pin 3\r\n                    // outside leads to ground and +5V\r\nint val = 0;        // variable to store the value read\r\n\r\nvoid setup() {\r\n    Serial.begin(9600);           //  setup serial\r\n}\r\n\r\nvoid loop() {\r\n    val = analogRead(analogPin);  // read the input pin\r\n    Serial.println(val);          // debug value\r\n}\r\n\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u8702\u9e23\u5668",children:"\u8702\u9e23\u5668"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"alt text",src:i(94749).A+"",width:"1858",height:"907"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"GND \u63a5\u5730"}),"\n",(0,r.jsx)(e.li,{children:"I/O \u63a7\u5236\u4fe1\u53f7\uff0cHIGH/LOW"}),"\n",(0,r.jsx)(e.li,{children:"VCC \u7535\u6e90"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"float duty = 0.5;\r\n\r\nvoid setup() {\r\n    pinMode(8, OUTPUT);\r\n    Serial.begin(9600); \r\n}\r\n\r\nvoid loop() {\r\n    digitalWrite(8, HIGH);\r\n    delay(20 * duty);\r\n    digitalWrite(8, LOW);\r\n    delay(20 * (1 - duty));\r\n    duty += 0.001;\r\n    if(duty > 0.9){\r\n        duty = 0.1;\r\n    }\r\n    Serial.println(duty);\r\n}\n"})}),"\n",(0,r.jsx)(e.h1,{id:"serial",children:"Serial"}),"\n",(0,r.jsx)(e.h2,{id:"available",children:"available"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:'int incomingByte = 0; // for incoming serial data\r\n\r\nvoid setup() {\r\n    Serial.begin(9600); // opens serial port, sets data rate to 9600 bps\r\n}\r\n\r\nvoid loop() {\r\n    // reply only when you receive data:\r\n    if (Serial.available() > 0) {\r\n    // read the incoming byte:\r\n    incomingByte = Serial.read();\r\n\r\n    // say what you got:\r\n    Serial.print("I received: ");\r\n    Serial.println(incomingByte, DEC);\r\n    }\r\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},11105:(n,e,i)=>{i.d(e,{A:()=>r});const r=i.p+"assets/images/18f13736c56217409fc177b8ebf90af-b54f066eb6fef87c4693084ea5b19e5c.jpg"},94749:(n,e,i)=>{i.d(e,{A:()=>r});const r=i.p+"assets/images/58dec32c6ad4d0b35b4f6ca0df119e3-c9585c4d183573acc33a6f9bae012abc.jpg"},91447:(n,e,i)=>{i.d(e,{A:()=>r});const r=i.p+"assets/images/983adc1e242e0bda8eb94526bfa5ef9-f3ea5d56fcc62024e4f9f18e5afcb852.jpg"},28453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>d});var r=i(96540);const t={},l=r.createContext(t);function a(n){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);