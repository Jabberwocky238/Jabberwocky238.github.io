"use strict";(self.webpackChunkmybooks=self.webpackChunkmybooks||[]).push([[7123],{4226:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(4848),o=r(8453);const a={},i=void 0,s={id:"Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine",title:"a-bytecode-virtual-machine",description:"Our Java interpreter, jlox, taught us many of the fundamentals of programming",source:"@site/docs/Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine.md",sourceDirName:"Craftinginterpreters/not-translated-yet",slug:"/Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine",permalink:"/docs/Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine",draft:!1,unlisted:!1,editUrl:"https://github.com/jabberwocky238/jabberwocky238.github.io/docs/Craftinginterpreters/not-translated-yet/a-bytecode-virtual-machine.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"not-translated-yet",permalink:"/docs/category/not-translated-yet"},next:{title:"a-tree-walk-interpreter",permalink:"/docs/Craftinginterpreters/not-translated-yet/a-tree-walk-interpreter"}},l={},c=[];function u(e){const t={code:"code",em:"em",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Our Java interpreter, jlox, taught us many of the fundamentals of programming\r\nlanguages, but we still have much to learn. First, if you run any interesting\r\nLox programs in jlox, you'll discover it's achingly slow. The style of\r\ninterpretation it uses -- walking the AST directly -- is good enough for ",(0,n.jsx)(t.em,{children:"some"}),"\r\nreal-world uses, but leaves a lot to be desired for a general-purpose scripting\r\nlanguage."]}),"\n",(0,n.jsxs)(t.p,{children:["Also, we implicitly rely on runtime features of the JVM itself. We take for\r\ngranted that things like ",(0,n.jsx)(t.code,{children:"instanceof"})," in Java work ",(0,n.jsx)(t.em,{children:"somehow"}),". And we never for a\r\nsecond worry about memory management because the JVM's garbage collector takes\r\ncare of it for us."]}),"\n",(0,n.jsx)(t.p,{children:"When we were focused on high-level concepts, it was fine to gloss over those.\r\nBut now that we know our way around an interpreter, it's time to dig down to\r\nthose lower layers and build our own virtual machine from scratch using nothing\r\nmore than the C standard library..."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(6540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);