"use strict";(self.webpackChunkmybooks=self.webpackChunkmybooks||[]).push([[5818],{5402:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var a=t(4848),r=t(8453);const s={sidebar_position:1},o=void 0,i={id:"Craftinginterpreters/Welcome/Introduction",title:"Introduction",description:"Fairy tales are more than true: not because they tell us that dragons exist,",source:"@site/docs/Craftinginterpreters/Welcome/Introduction.md",sourceDirName:"Craftinginterpreters/Welcome",slug:"/Craftinginterpreters/Welcome/Introduction",permalink:"/docs/Craftinginterpreters/Welcome/Introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/jabberwocky238/jabberwocky238.github.io/docs/Craftinginterpreters/Welcome/Introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/docs/category/welcome"},next:{title:"A Map of the Territory",permalink:"/docs/Craftinginterpreters/Welcome/A Map of the Territory"}},l={},h=[{value:"Why Learn This Stuff?",id:"why-learn-this-stuff",level:2},{value:"Little languages are everywhere",id:"little-languages-are-everywhere",level:3},{value:"Languages are great exercise",id:"languages-are-great-exercise",level:3},{value:"One more reason",id:"one-more-reason",level:3},{value:"How the Book Is Organized",id:"how-the-book-is-organized",level:2},{value:"The code",id:"the-code",level:3},{value:"Snippets",id:"snippets",level:3},{value:"Asides",id:"asides",level:3},{value:"Challenges",id:"challenges",level:3},{value:"Design notes",id:"design-notes",level:3},{value:"The First Interpreter",id:"the-first-interpreter",level:2},{value:"The Second Interpreter",id:"the-second-interpreter",level:2},{value:"Challenges",id:"challenges-1",level:2},{value:"Design Note: What&#39;s in a Name?",id:"design-note-whats-in-a-name",level:2}];function d(e){const n={a:"a",aside:"aside",blockquote:"blockquote",br:"br",cite:"cite",code:"code",div:"div",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Fairy tales are more than true: not because they tell us that dragons exist,\r\nbut because they tell us that dragons can be beaten."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.cite,{children:["G.K. Chesterton by way of Neil Gaiman, ",(0,a.jsx)(n.em,{children:"Coraline"})]})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["I'm really excited we're going on this journey together. This is a book on\r\nimplementing interpreters for programming languages. It's also a book on how to\r\ndesign a language worth implementing. It's the book I wish I'd had when I first\r\nstarted getting into languages, and it's the book I've been writing in my ",(0,a.jsx)(n.span,{name:"head",children:"head"})," for nearly a decade."]}),"\n",(0,a.jsxs)(n.aside,{name:"head",children:["\n",(0,a.jsx)(n.p,{children:"To my friends and family, sorry I've been so absentminded!"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"In these pages, we will walk step-by-step through two complete interpreters for\r\na full-featured language. I assume this is your first foray into languages, so\r\nI'll cover each concept and line of code you need to build a complete, usable,\r\nfast language implementation."}),"\n",(0,a.jsxs)(n.p,{children:["In order to cram two full implementations inside one book without it turning\r\ninto a doorstop, this text is lighter on theory than others. As we build each\r\npiece of the system, I will introduce the history and concepts behind it. I'll\r\ntry to get you familiar with the lingo so that if you ever find yourself at a\r\n",(0,a.jsx)(n.span,{name:"party",children:"cocktail party"})," full of PL (programming language)\r\nresearchers, you'll fit in."]}),"\n",(0,a.jsxs)(n.aside,{name:"party",children:["\n",(0,a.jsx)(n.p,{children:"Strangely enough, a situation I have found myself in multiple times. You\r\nwouldn't believe how much some of them can drink."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["But we're mostly going to spend our brain juice getting the language up and\r\nrunning. This is not to say theory isn't important. Being able to reason\r\nprecisely and ",(0,a.jsx)(n.span,{name:"formal",children:"formally"})," about syntax and semantics is\r\na vital skill when working on a language. But, personally, I learn best by\r\ndoing. It's hard for me to wade through paragraphs full of abstract concepts and\r\nreally absorb them. But if I've coded something, run it, and debugged it, then I\r\n",(0,a.jsx)(n.em,{children:"get"})," it."]}),"\n",(0,a.jsxs)(n.aside,{name:"formal",children:["\n",(0,a.jsx)(n.p,{children:"Static type systems in particular require rigorous formal reasoning. Hacking on\r\na type system has the same feel as proving a theorem in mathematics."}),"\n",(0,a.jsxs)(n.p,{children:["It turns out this is no coincidence. In the early half of last century, Haskell\r\nCurry and William Alvin Howard showed that they are two sides of the same coin:\r\n",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence",children:"the Curry-Howard isomorphism"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"That's my goal for you. I want you to come away with a solid intuition of how a\r\nreal language lives and breathes. My hope is that when you read other, more\r\ntheoretical books later, the concepts there will firmly stick in your mind,\r\nadhered to this tangible substrate."}),"\n",(0,a.jsx)(n.h2,{id:"why-learn-this-stuff",children:"Why Learn This Stuff?"}),"\n",(0,a.jsx)(n.p,{children:"Every introduction to every compiler book seems to have this section. I don't\r\nknow what it is about programming languages that causes such existential doubt.\r\nI don't think ornithology books worry about justifying their existence. They\r\nassume the reader loves birds and start teaching."}),"\n",(0,a.jsxs)(n.p,{children:["But programming languages are a little different. I suppose it is true that the\r\nodds of any of us creating a broadly successful, general-purpose programming\r\nlanguage are slim. The designers of the world's widely used languages could fit\r\nin a Volkswagen bus, even without putting the pop-top camper up. If joining that\r\nelite group was the ",(0,a.jsx)(n.em,{children:"only"})," reason to learn languages, it would be hard to\r\njustify. Fortunately, it isn't."]}),"\n",(0,a.jsx)(n.h3,{id:"little-languages-are-everywhere",children:"Little languages are everywhere"}),"\n",(0,a.jsx)(n.p,{children:'For every successful general-purpose language, there are a thousand successful\r\nniche ones. We used to call them "little languages", but inflation in the jargon\r\neconomy led to the name "domain-specific languages". These are pidgins\r\ntailor-built to a specific task. Think application scripting languages, template\r\nengines, markup formats, and configuration files.'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.span,{name:"little"}),(0,a.jsx)(n.img,{src:"image/introduction/little-languages.png",alt:"A random selection of little languages."})]}),"\n",(0,a.jsxs)(n.aside,{name:"little",children:["\n",(0,a.jsx)(n.p,{children:"A random selection of some little languages you might run into."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Almost every large software project needs a handful of these. When you can, it's\r\ngood to reuse an existing one instead of rolling your own. Once you factor in\r\ndocumentation, debuggers, editor support, syntax highlighting, and all of the\r\nother trappings, doing it yourself becomes a tall order."}),"\n",(0,a.jsx)(n.p,{children:"But there's still a good chance you'll find yourself needing to whip up a parser\r\nor other tool when there isn't an existing library that fits your needs. Even\r\nwhen you are reusing some existing implementation, you'll inevitably end up\r\nneeding to debug and maintain it and poke around in its guts."}),"\n",(0,a.jsx)(n.h3,{id:"languages-are-great-exercise",children:"Languages are great exercise"}),"\n",(0,a.jsx)(n.p,{children:"Long distance runners sometimes train with weights strapped to their ankles or\r\nat high altitudes where the atmosphere is thin. When they later unburden\r\nthemselves, the new relative ease of light limbs and oxygen-rich air enables\r\nthem to run farther and faster."}),"\n",(0,a.jsxs)(n.p,{children:["Implementing a language is a real test of programming skill. The code is complex\r\nand performance critical. You must master recursion, dynamic arrays, trees,\r\ngraphs, and hash tables. You probably use hash tables at least in your\r\nday-to-day programming, but do you ",(0,a.jsx)(n.em,{children:"really"})," understand them? Well, after we've\r\ncrafted our own from scratch, I guarantee you will."]}),"\n",(0,a.jsx)(n.p,{children:"While I intend to show you that an interpreter isn't as daunting as you might\r\nbelieve, implementing one well is still a challenge. Rise to it, and you'll come\r\naway a stronger programmer, and smarter about how you use data structures and\r\nalgorithms in your day job."}),"\n",(0,a.jsx)(n.h3,{id:"one-more-reason",children:"One more reason"}),"\n",(0,a.jsxs)(n.p,{children:["This last reason is hard for me to admit, because it's so close to my heart.\r\nEver since I learned to program as a kid, I felt there was something magical\r\nabout languages. When I first tapped out BASIC programs one key at a time I\r\ncouldn't conceive how BASIC ",(0,a.jsx)(n.em,{children:"itself"})," was made."]}),"\n",(0,a.jsx)(n.p,{children:"Later, the mixture of awe and terror on my college friends' faces when talking\r\nabout their compilers class was enough to convince me language hackers were a\r\ndifferent breed of human -- some sort of wizards granted privileged access to\r\narcane arts."}),"\n",(0,a.jsxs)(n.p,{children:["It's a charming ",(0,a.jsx)(n.span,{name:"image",children:"image"}),", but it has a darker side. ",(0,a.jsx)(n.em,{children:"I"}),"\r\ndidn't feel like a wizard, so I was left thinking I lacked some inborn quality\r\nnecessary to join the cabal. Though I've been fascinated by languages ever since\r\nI doodled made-up keywords in my school notebook, it took me decades to muster\r\nthe courage to try to really learn them. That \"magical\" quality, that sense of\r\nexclusivity, excluded ",(0,a.jsx)(n.em,{children:"me"}),"."]}),"\n",(0,a.jsxs)(n.aside,{name:"image",children:["\n",(0,a.jsxs)(n.p,{children:["And its practitioners don't hesitate to play up this image. Two of the seminal\r\ntexts on programming languages feature a ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Compilers:_Principles,_Techniques,_and_Tools",children:"dragon"})," and a ",(0,a.jsx)(n.a,{href:"https://mitpress.mit.edu/sites/default/files/sicp/index.html",children:"wizard"})," on their\r\ncovers."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"When I did finally start cobbling together my own little interpreters, I quickly\r\nlearned that, of course, there is no magic at all. It's just code, and the\r\npeople who hack on languages are just people."}),"\n",(0,a.jsxs)(n.p,{children:["There ",(0,a.jsx)(n.em,{children:"are"})," a few techniques you don't often encounter outside of languages, and\r\nsome parts are a little difficult. But not more difficult than other obstacles\r\nyou've overcome. My hope is that if you've felt intimidated by languages and\r\nthis book helps you overcome that fear, maybe I'll leave you just a tiny bit\r\nbraver than you were before."]}),"\n",(0,a.jsxs)(n.p,{children:["And, who knows, maybe you ",(0,a.jsx)(n.em,{children:"will"})," make the next great language. Someone has to."]}),"\n",(0,a.jsx)(n.h2,{id:"how-the-book-is-organized",children:"How the Book Is Organized"}),"\n",(0,a.jsx)(n.p,{children:"This book is broken into three parts. You're reading the first one now. It's a\r\ncouple of chapters to get you oriented, teach you some of the lingo that\r\nlanguage hackers use, and introduce you to Lox, the language we'll be\r\nimplementing."}),"\n",(0,a.jsx)(n.p,{children:"Each of the other two parts builds one complete Lox interpreter. Within those\r\nparts, each chapter is structured the same way. The chapter takes a single\r\nlanguage feature, teaches you the concepts behind it, and walks you through an\r\nimplementation."}),"\n",(0,a.jsx)(n.p,{children:"It took a good bit of trial and error on my part, but I managed to carve up the\r\ntwo interpreters into chapter-sized chunks that build on the previous chapters\r\nbut require nothing from later ones. From the very first chapter, you'll have a\r\nworking program you can run and play with. With each passing chapter, it grows\r\nincreasingly full-featured until you eventually have a complete language."}),"\n",(0,a.jsx)(n.p,{children:"Aside from copious, scintillating English prose, chapters have a few other\r\ndelightful facets:"}),"\n",(0,a.jsx)(n.h3,{id:"the-code",children:"The code"}),"\n",(0,a.jsxs)(n.p,{children:["We're about ",(0,a.jsx)(n.em,{children:"crafting"})," interpreters, so this book contains real code. Every\r\nsingle line of code needed is included, and each snippet tells you where to\r\ninsert it in your ever-growing implementation."]}),"\n",(0,a.jsxs)(n.p,{children:["Many other language books and language implementations use tools like ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Lex_(software)",children:"Lex"}),"\r\nand ",(0,a.jsx)(n.span,{name:"yacc",children:(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Yacc",children:"Yacc"})}),", so-called ",(0,a.jsx)(n.strong,{children:"compiler-compilers"}),", that\r\nautomatically generate some of the source files for an implementation from some\r\nhigher-level description. There are pros and cons to tools like those, and\r\nstrong opinions -- some might say religious convictions -- on both sides."]}),"\n",(0,a.jsxs)(n.aside,{name:"yacc",children:["\n",(0,a.jsx)(n.p,{children:'Yacc is a tool that takes in a grammar file and produces a source file for a\r\ncompiler, so it\'s sort of like a "compiler" that outputs a compiler, which is\r\nwhere we get the term "compiler-compiler".'}),"\n",(0,a.jsxs)(n.p,{children:["Yacc wasn't the first of its ilk, which is why it's named \"Yacc\" -- ",(0,a.jsx)(n.em,{children:"Yet\r\nAnother"})," Compiler-Compiler. A later similar tool is ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/GNU_bison",children:"Bison"}),', named as a pun on\r\nthe pronunciation of Yacc like "yak".']}),"\n",(0,a.jsx)(n.img,{src:"image/introduction/yak.png",alt:"A yak."}),"\n",(0,a.jsx)(n.p,{children:"If you find all of these little self-references and puns charming and fun,\r\nyou'll fit right in here. If not, well, maybe the language nerd sense of humor\r\nis an acquired taste."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"We will abstain from using them here. I want to ensure there are no dark corners\r\nwhere magic and confusion can hide, so we'll write everything by hand. As you'll\r\nsee, it's not as bad as it sounds, and it means you really will understand each\r\nline of code and how both interpreters work."}),"\n",(0,a.jsxs)(n.p,{children:['A book has different constraints from the "real world" and so the coding style\r\nhere might not always reflect the best way to write maintainable production\r\nsoftware. If I seem a little cavalier about, say, omitting ',(0,a.jsx)(n.code,{children:"private"})," or\r\ndeclaring a global variable, understand I do so to keep the code easier on your\r\neyes. The pages here aren't as wide as your IDE and every character counts."]}),"\n",(0,a.jsxs)(n.p,{children:["Also, the code doesn't have many comments. That's because each handful of lines\r\nis surrounded by several paragraphs of honest-to-God prose explaining it. When\r\nyou write a book to accompany your program, you are welcome to omit comments\r\ntoo. Otherwise, you should probably use ",(0,a.jsx)(n.code,{children:"//"})," a little more than I do."]}),"\n",(0,a.jsx)(n.p,{children:"While the book contains every line of code and teaches what each means, it does\r\nnot describe the machinery needed to compile and run the interpreter. I assume\r\nyou can slap together a makefile or a project in your IDE of choice in order to\r\nget the code to run. Those kinds of instructions get out of date quickly, and\r\nI want this book to age like XO brandy, not backyard hooch."}),"\n",(0,a.jsx)(n.h3,{id:"snippets",children:"Snippets"}),"\n",(0,a.jsx)(n.p,{children:"Since the book contains literally every line of code needed for the\r\nimplementations, the snippets are quite precise. Also, because I try to keep the\r\nprogram in a runnable state even when major features are missing, sometimes we\r\nadd temporary code that gets replaced in later snippets."}),"\n",(0,a.jsx)(n.p,{children:"A snippet with all the bells and whistles looks like this:"}),"\n",(0,a.jsxs)(n.div,{className:"codehilite",children:[(0,a.jsx)(n.pre,{className:"insert-before",children:"      default:\n"}),(0,a.jsxs)(n.div,{className:"source-file",children:[(0,a.jsx)(n.em,{children:"lox/Scanner.java"}),(0,a.jsx)(n.br,{}),"\nin ",(0,a.jsxs)(n.em,{children:["scanToken",(0,a.jsxs)(n.span,{className:"origin-text",children:["/em",(0,a.jsx)(n.span,{className:"translated-text"})]}),(0,a.jsx)(n.br,{}),"\nreplace 1 line"]})]}),(0,a.jsxs)(n.em,{children:["\n",(0,a.jsxs)(n.pre,{className:"insert",children:["        ",(0,a.jsx)(n.span,{className:"k",children:"if"})," (",(0,a.jsxs)(n.span,{className:"i",children:["isDigit",(0,a.jsxs)(n.span,{className:"origin-text",children:["/span",(0,a.jsx)(n.span,{className:"translated-text",children:(0,a.jsx)(n.span,{className:"i",children:"c"})})]}),") {\n          ",(0,a.jsxs)(n.span,{className:"i",children:["number",(0,a.jsxs)(n.span,{className:"origin-text",children:["/span",(0,a.jsx)(n.span,{className:"translated-text"})]}),";\n        } ",(0,a.jsx)(n.span,{className:"k",children:"else"})," {\n          ",(0,a.jsx)(n.span,{className:"t",children:"Lox"}),".",(0,a.jsxs)(n.span,{className:"i",children:["error",(0,a.jsxs)(n.span,{className:"origin-text",children:["/span",(0,a.jsxs)(n.span,{className:"translated-text",children:[(0,a.jsx)(n.span,{className:"i",children:"line"}),", ",(0,a.jsx)(n.span,{className:"s",children:'"Unexpected character."'})]})]}),";\n        }\n"]})]})]})]}),(0,a.jsx)(n.pre,{className:"insert-after",children:"        break;\n"})]})]}),(0,a.jsxs)(n.em,{children:["\n",(0,a.jsxs)(n.div,{className:"source-file-narrow",children:[(0,a.jsx)(n.em,{children:"lox/Scanner.java"}),", in ",(0,a.jsxs)(n.em,{children:["scanToken",(0,a.jsxs)(n.span,{className:"origin-text",children:["/em",(0,a.jsx)(n.span,{className:"translated-text"})]}),", replace 1 line"]})]}),(0,a.jsxs)(n.em,{children:["\n",(0,a.jsx)(n.p,{children:'In the center, you have the new code to add. It may have a few faded out lines\r\nabove or below to show where it goes in the existing surrounding code. There is\r\nalso a little blurb telling you in which file and where to place the snippet. If\r\nthat blurb says "replace _ lines", there is some existing code between the faded\r\nlines that you need to remove and replace with the new snippet.'}),"\n",(0,a.jsx)(n.h3,{id:"asides",children:"Asides"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.span,{name:"joke",children:"Asides"})," contain biographical sketches, historical\r\nbackground, references to related topics, and suggestions of other areas to\r\nexplore. There's nothing that you ",(0,a.jsx)(n.em,{children:"need"})," to know in them to understand later\r\nparts of the book, so you can skip them if you want. I won't judge you, but I\r\nmight be a little sad."]}),"\n",(0,a.jsxs)(n.aside,{name:"joke",children:["\n",(0,a.jsx)(n.p,{children:"Well, some asides do, at least. Most of them are just dumb jokes and amateurish\r\ndrawings."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"challenges",children:"Challenges"}),"\n",(0,a.jsxs)(n.p,{children:["Each chapter ends with a few exercises. Unlike textbook problem sets, which tend\r\nto review material you already covered, these are to help you learn ",(0,a.jsx)(n.em,{children:"more"})," than\r\nwhat's in the chapter. They force you to step off the guided path and explore on\r\nyour own. They will make you research other languages, figure out how to\r\nimplement features, or otherwise get you out of your comfort zone."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.span,{name:"warning",children:"Vanquish"})," the challenges and you'll come away with a\r\nbroader understanding and possibly a few bumps and scrapes. Or skip them if you\r\nwant to stay inside the comfy confines of the tour bus. It's your book."]}),"\n",(0,a.jsxs)(n.aside,{name:"warning",children:["\n",(0,a.jsx)(n.p,{children:"A word of warning: the challenges often ask you to make changes to the\r\ninterpreter you're building. You'll want to implement those in a copy of your\r\ncode. The later chapters assume your interpreter is in a pristine\r\n(\"unchallenged\"?) state."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"design-notes",children:"Design notes"}),"\n",(0,a.jsxs)(n.p,{children:['Most "programming language" books are strictly programming language\r\n',(0,a.jsx)(n.em,{children:"implementation"})," books. They rarely discuss how one might happen to ",(0,a.jsx)(n.em,{children:"design"})," the\r\nlanguage being implemented. Implementation is fun because it is so ",(0,a.jsx)(n.span,{name:"benchmark",children:"precisely defined"}),". We programmers seem to have an\r\naffinity for things that are black and white, ones and zeroes."]}),"\n",(0,a.jsxs)(n.aside,{name:"benchmark",children:["\n",(0,a.jsx)(n.p,{children:"I know a lot of language hackers whose careers are based on this. You slide a\r\nlanguage spec under their door, wait a few months, and code and benchmark\r\nresults come out."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Personally, I think the world needs only so many implementations of ",(0,a.jsx)(n.span,{name:"fortran",children:"FORTRAN 77"}),". At some point, you find yourself designing a\r\n",(0,a.jsx)(n.em,{children:"new"})," language. Once you start playing ",(0,a.jsx)(n.em,{children:"that"})," game, then the softer, human side\r\nof the equation becomes paramount. Things like which features are easy to learn,\r\nhow to balance innovation and familiarity, what syntax is more readable and to\r\nwhom."]}),"\n",(0,a.jsxs)(n.aside,{name:"fortran",children:["\n",(0,a.jsx)(n.p,{children:"Hopefully your new language doesn't hardcode assumptions about the width of a\r\npunched card into its grammar."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"All of that stuff profoundly affects the success of your new language. I want\r\nyour language to succeed, so in some chapters I end with a \"design note\", a\r\nlittle essay on some corner of the human aspect of programming languages. I'm no\r\nexpert on this -- I don't know if anyone really is -- so take these with a large\r\npinch of salt. That should make them tastier food for thought, which is my main\r\naim."}),"\n",(0,a.jsx)(n.h2,{id:"the-first-interpreter",children:"The First Interpreter"}),"\n",(0,a.jsxs)(n.p,{children:["We'll write our first interpreter, jlox, in ",(0,a.jsx)(n.span,{name:"lang",children:"Java"}),". The\r\nfocus is on ",(0,a.jsx)(n.em,{children:"concepts"}),". We'll write the simplest, cleanest code we can to\r\ncorrectly implement the semantics of the language. This will get us comfortable\r\nwith the basic techniques and also hone our understanding of exactly how the\r\nlanguage is supposed to behave."]}),"\n",(0,a.jsxs)(n.aside,{name:"lang",children:["\n",(0,a.jsxs)(n.p,{children:["The book uses Java and C, but readers have ported the code to ",(0,a.jsx)(n.a,{href:"https://github.com/munificent/craftinginterpreters/wiki/Lox-implementations",children:"many other\r\nlanguages"}),". If the languages I picked aren't your bag, take a look at\r\nthose."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Java is a great language for this. It's high level enough that we don't get\r\noverwhelmed by fiddly implementation details, but it's still pretty explicit.\r\nUnlike in scripting languages, there tends to be less complex machinery hiding\r\nunder the hood, and you've got static types to see what data structures you're\r\nworking with."}),"\n",(0,a.jsx)(n.p,{children:"I also chose Java specifically because it is an object-oriented language. That\r\nparadigm swept the programming world in the '90s and is now the dominant way of\r\nthinking for millions of programmers. Odds are good you're already used to\r\norganizing code into classes and methods, so we'll keep you in that comfort\r\nzone."}),"\n",(0,a.jsxs)(n.p,{children:["While academic language folks sometimes look down on object-oriented languages,\r\nthe reality is that they are widely used even for language work. GCC and LLVM\r\nare written in C++, as are most JavaScript virtual machines. Object-oriented\r\nlanguages are ubiquitous, and the tools and compilers ",(0,a.jsx)(n.em,{children:"for"})," a language are often\r\nwritten ",(0,a.jsx)(n.em,{children:"in"})," the ",(0,a.jsx)(n.span,{name:"host",children:"same language"}),"."]}),"\n",(0,a.jsxs)(n.aside,{name:"host",children:["\n",(0,a.jsxs)(n.p,{children:["A compiler reads files in one language, translates them, and outputs files in\r\nanother language. You can implement a compiler in any language, including the\r\nsame language it compiles, a process called ",(0,a.jsx)(n.strong,{children:"self-hosting"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["You can't compile your compiler using itself yet, but if you have another\r\ncompiler for your language written in some other language, you use ",(0,a.jsx)(n.em,{children:"that"})," one to\r\ncompile your compiler once. Now you can use the compiled version of your own\r\ncompiler to compile future versions of itself, and you can discard the original\r\none compiled from the other compiler. This is called ",(0,a.jsx)(n.strong,{children:"bootstrapping"}),", from\r\nthe image of pulling yourself up by your own bootstraps."]}),"\n",(0,a.jsx)(n.img,{src:"image/introduction/bootstrap.png",alt:"Fact: This is the primary mode of transportation of the American cowboy."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"And, finally, Java is hugely popular. That means there's a good chance you\r\nalready know it, so there's less for you to learn to get going in the book. If\r\nyou aren't that familiar with Java, don't freak out. I try to stick to a fairly\r\nminimal subset of it. I use the diamond operator from Java 7 to make things a\r\nlittle more terse, but that's about it as far as \"advanced\" features go. If you\r\nknow another object-oriented language, like C# or C++, you can muddle through."}),"\n",(0,a.jsxs)(n.p,{children:["By the end of part II, we'll have a simple, readable implementation. It's not\r\nvery fast, but it's correct. However, we are only able to accomplish that by\r\nbuilding on the Java virtual machine's own runtime facilities. We want to learn\r\nhow Java ",(0,a.jsx)(n.em,{children:"itself"})," implements those things."]}),"\n",(0,a.jsx)(n.h2,{id:"the-second-interpreter",children:"The Second Interpreter"}),"\n",(0,a.jsxs)(n.p,{children:["So in the next part, we start all over again, but this time in C. C is the\r\nperfect language for understanding how an implementation ",(0,a.jsx)(n.em,{children:"really"})," works, all the\r\nway down to the bytes in memory and the code flowing through the CPU."]}),"\n",(0,a.jsxs)(n.p,{children:["A big reason that we're using C is so I can show you things C is particularly\r\ngood at, but that ",(0,a.jsx)(n.em,{children:"does"})," mean you'll need to be pretty comfortable with it. You\r\ndon't have to be the reincarnation of Dennis Ritchie, but you shouldn't be\r\nspooked by pointers either."]}),"\n",(0,a.jsx)(n.p,{children:"If you aren't there yet, pick up an introductory book on C and chew through it,\r\nthen come back here when you're done. In return, you'll come away from this book\r\nan even stronger C programmer. That's useful given how many language\r\nimplementations are written in C: Lua, CPython, and Ruby's MRI, to name a few."}),"\n",(0,a.jsxs)(n.p,{children:["In our C interpreter, ",(0,a.jsx)(n.span,{name:"clox",children:"clox"}),", we are forced to implement\r\nfor ourselves all the things Java gave us for free. We'll write our own dynamic\r\narray and hash table. We'll decide how objects are represented in memory, and\r\nbuild a garbage collector to reclaim them."]}),"\n",(0,a.jsxs)(n.aside,{name:"clox",children:["\n",(0,a.jsx)(n.p,{children:'I pronounce the name like "sea-locks", but you can say it "clocks" or even\r\n"cloch", where you pronounce the "x" like the Greeks do if it makes you happy.'}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Our Java implementation was focused on being correct. Now that we have that\r\ndown, we'll turn to also being ",(0,a.jsx)(n.em,{children:"fast"}),". Our C interpreter will contain a ",(0,a.jsx)(n.span,{name:"compiler",children:"compiler"})," that translates Lox to an efficient bytecode\r\nrepresentation (don't worry, I'll get into what that means soon), which it then\r\nexecutes. This is the same technique used by implementations of Lua, Python,\r\nRuby, PHP, and many other successful languages."]}),"\n",(0,a.jsxs)(n.aside,{name:"compiler",children:["\n",(0,a.jsx)(n.p,{children:"Did you think this was just an interpreter book? It's a compiler book as well.\r\nTwo for the price of one!"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"We'll even try our hand at benchmarking and optimization. By the end, we'll have\r\na robust, accurate, fast interpreter for our language, able to keep up with\r\nother professional caliber implementations out there. Not bad for one book and a\r\nfew thousand lines of code."}),"\n",(0,a.jsxs)(n.div,{className:"challenges",children:["\n",(0,a.jsx)(n.h2,{id:"challenges-1",children:"Challenges"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["There are at least six domain-specific languages used in the ",(0,a.jsx)(n.a,{href:"https://github.com/munificent/craftinginterpreters",children:"little system\r\nI cobbled together"})," to write and publish this book. What are they?"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Get a "Hello, world!" program written and running in Java. Set up whatever\r\nmakefiles or IDE projects you need to get it working. If you have a\r\ndebugger, get comfortable with it and step through your program as it runs.'}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Do the same thing for C. To get some practice with pointers, define a\r\n",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Doubly_linked_list",children:"doubly linked list"})," of heap-allocated strings. Write functions to insert,\r\nfind, and delete items from it. Test them."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.div,{className:"design-note",children:["\n",(0,a.jsx)(n.h2,{id:"design-note-whats-in-a-name",children:"Design Note: What's in a Name?"}),"\n",(0,a.jsxs)(n.p,{children:["One of the hardest challenges in writing this book was coming up with a name for\r\nthe language it implements. I went through ",(0,a.jsx)(n.em,{children:"pages"})," of candidates before I found\r\none that worked. As you'll discover on the first day you start building your own\r\nlanguage, naming is deviously hard. A good name satisfies a few criteria:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"It isn't in use."})," You can run into all sorts of trouble, legal and\r\nsocial, if you inadvertently step on someone else's name."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"It's easy to pronounce."})," If things go well, hordes of people will be\r\nsaying and writing your language's name. Anything longer than a couple of\r\nsyllables or a handful of letters will annoy them to no end."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"It's distinct enough to search for."})," People will Google your language's\r\nname to learn about it, so you want a word that's rare enough that most\r\nresults point to your docs. Though, with the amount of AI search engines are\r\npacking today, that's less of an issue. Still, you won't be doing your users\r\nany favors if you name your language \"for\"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"It doesn't have negative connotations across a number of cultures."}),' This\r\nis hard to be on guard for, but it\'s worth considering. The designer of\r\nNimrod ended up renaming his language to "Nim" because too many people\r\nremember that Bugs Bunny used "Nimrod" as an insult. (Bugs was using it\r\nironically.)']}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If your potential name makes it through that gauntlet, keep it. Don't get hung\r\nup on trying to find an appellation that captures the quintessence of your\r\nlanguage. If the names of the world's other successful languages teach us\r\nanything, it's that the name doesn't matter much. All you need is a reasonably\r\nunique token."}),"\n"]}),"\n"]})]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);